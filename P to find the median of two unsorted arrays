/******************************************************************************

Name         : Sohan Vishmith D Souza
Date         : 12/03/2022
Description  : In probability theory and statistics, a median is described as the number separating the higher half of a sample, a population, or a probability distribution, from the lower half. The median of a finite list of numbers can be found by arranging all the numbers from lowest value to highest value and picking the middle one.
                Example:
                 For getting the median of input array { 12, 11, 15, 10, 20 }, first sort the array. We get { 10, 11, 12, 15, 20 } after sorting. Median is the middle element of the sorted array which is 12.       
Input       : 2 Integer Array of size 'M' and 'N' elements.
output      : Enter the 'n' value for Array A: 5
              Enter the 'n' value for Array B: 5
              Enter the elements one by one for Array A: 3 2 8 5 4
              Enter the elements one by one for Array B: 12 3 7 8 5
            
              Median of array1 : 4
              Median of array2 : 7
              Median of both arrays : 5.5                         
            
                Enter the 'n' value for Array A: 5

                Enter the 'n' value for Array A: 5
                Enter the 'n' value for Array B: 4
                Enter the elements one by one for Array A: 3 2 8 5 4
                Enter the elements one by one for Array B: 12 13 7 5
                Median of array1 : 4
                Median of array2 : 9.5                                      
                Median of both arrays : 6.75        
*******************************************************************************/
#include <stdio.h>

int main()
{
    int A, B, arr1[50], arr2[70], i, number, j, temp, a;   // Declaration
    int  C, D, E, F ;  
    float average1, average2;
       printf("Enter the 'n' value for Array A:\n"); // Value of n from user
       scanf("%d", &A); 
       printf("Enter the 'n' value for Array B:\n");
       scanf("%d", &B); 
       printf("Enter the elements one by one for Array A:");
  
      for(i = 0 ; i < A; i++)   // to take elements one by one
    {  
	
        scanf("%d", &arr1[i]);  
    }  
    
    printf("Enter the elements one by one for Array B:");
   
    for(i = 0; i < B; i++)  
    {  
        scanf("%d ", &arr2[i]);  
    } 
   // bubble sort for array1
   
    for(i = 0; i < A - 1; i++)
    {
        for(j = 0; j < A - i - 1; j++)
        {
            if(arr1[j] > arr1[j + 1])
            {
                temp = arr1[j];
                arr1[j] = arr1[j + 1];
                arr1[j + 1] = temp;
            }
        }
    }
 
  // Bubble sort array 2
    for(i = 0; i < B - 1; i++)
    {
        for(j = 0; j < B - i - 1; j++)
        {
            if(arr2[j] > arr2[j + 1])
            {
                temp = arr2[j];
                arr2[j] = arr2[j + 1];
                arr2[j + 1] = temp;
            }
        }
    }
   

  if( A % 2 == 0 ) // median of even elements
  
  {
      C = arr1[ A/2 ]; 
      D = arr1[ (A/2)-1];
      average1 = ((float) C + D)/ 2 ;
  }
  else //median of odd eelements
 { 
      average1 = arr1[ A/2 ];
 }
  if( B % 2 == 0 ) // for arr2
  
  {
      E = arr2[ B/2 ];
      F = arr2[ (B/2)-1];
      average2 = (( float ) E + F) / 2 ;
  }
  else
 { 
      average2 = arr2[ B/2 ];
 }
 
 printf("Median of array1 : %g\n", average1 );
 printf("Median of array2 : %g\n", average2 );
 printf("Median of both arrays : %g\n", (average1 + average2) /2 );
 
 return 0;
}







